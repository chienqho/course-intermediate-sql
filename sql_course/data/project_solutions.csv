key;value
q_0_1; select * from courses limit 10
q_1_1;select count(*) as cnt from courses
q_1_2;select distinct course_category from courses
q_2_1;select count(*) as cnt from courses where course_category = 'Machine Learning'
q_2_2;select strftime("%Y",start_date) as year, count(*)as count_by_year from courses where   course_category = 'Machine Learning' group by strftime("%Y",start_date)
q_2_3;select distinct course_name, course_category, course_desc from courses where lower(course_name || course_desc) like '%ml%' or lower(course_name || course_desc) like '%learning%' or lower(course_name || course_desc) like '%models%'
q_2_4;select strftime("%Y",start_date) as year, count(*) as count_by_year from courses where course_category = 'Machine Learning' or course_category = 'Deep Learning' or course_category = 'Language Processing' group by strftime("%Y",start_date)
q_3_1;select strftime("%Y",start_date) as year, count(*) as count_by_year from courses group by strftime("%Y",start_date)
q_3_2;select (sum(case when strftime("%Y",start_date) = '2020' then nps else 0 end)/ sum(case when strftime("%Y",start_date) = '2020' then 1.0 else 0.0 end)) as covid_nps, sum(case when strftime("%Y",start_date) != '2020' then nps else 0 end)/ sum(case when strftime("%Y",start_date) != '2020' then 1.0 else 0.0 end) as rest_nps from courses
q_3_3;select strftime("%Y",start_date) as year, avg(nps) from courses group by strftime("%Y",start_date)
q_3_4;select strftime("%Y",start_date) as year, avg(num_learners_registered/num_tas) as learner_ta_ratio, avg(num_weeks) as avg_num_weeks from courses group by strftime("%Y",start_date)
q_4_1;select min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses
q_4_2;select case when num_learners_registered < 30 then 'low' when num_learners_registered < 100 then 'medium' else 'high' end as num_learners_bucket, min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses group by num_learners_bucket
q_4_3;select case when num_weeks < 4 then 'short' else 'long' end as course_duration, course_level, avg(nps) as avg_nps from courses group by course_duration, course_level
q2_1_1;select count(*) as cnt from course_info inner join course_run on (course_info.course_id = course_run.course_id) where course_category = 'Machine Learning'
q2_1_2;select strftime("%Y",start_date) as year, count(*) as count_by_year from course_info inner join course_run on (course_info.course_id = course_run.course_id) where course_category = 'Machine Learning' group by strftime("%Y",start_date)
q2_1_3;select distinct course_name, course_category, course_desc from course_info where lower(course_name || course_desc) like '%ml%' or lower(course_name || course_desc) like '%learning%' or lower(course_name || course_desc) like '%models%'
q2_1_4;select strftime("%Y",start_date) as year, count(*) as count_by_year from course_info inner join course_run on (course_info.course_id = course_run.course_id) where course_category = 'Machine Learning' or course_category = 'Deep Learning' or course_category = 'Language Processing' group by strftime("%Y",start_date)
q2_2_1;select strftime("%Y",start_date) as year, count(*) as count_by_year from course_run group by strftime("%Y",start_date)
q2_2_2;  select (sum(case when strftime("%Y",start_date) = '2020' then nps else 0 end)/ sum(case when strftime("%Y",start_date) = '2020' then 1.0 else 0.0 end)) as covid_nps, sum(case when strftime("%Y",start_date) != '2020' then nps else 0 end)/ sum(case when strftime("%Y",start_date) != '2020' then 1.0 else 0.0 end) as rest_nps from course_run
q2_2_3;select strftime("%Y",start_date) as year, avg(nps) from course_run group by strftime("%Y",start_date)
q2_3_1;select min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from course_run
q2_3_2;select case when num_weeks < 4 then 'short' else 'long' end as course_duration, course_level, avg(nps) as avg_nps from course_run inner join course_info on (course_run.course_id = course_info.course_id) group by course_duration, course_level
q2_4_1;select course_name, CR.course_run_id, count(L.learner_id) as num_learners, CR.nps from  course_run as CR inner join instructors as I on (CR.instructor_id = I.instructor_id) inner join course_info as CI on (CR.course_id = CI.course_id) inner join course_registration_info as CRI on (CR.course_run_id = CRI.course_run_id) inner join learners as L on (L.learner_id = CRI.learner_id) where I.affiliation !=  'M & T Bank Corporation' and CI.course_level = 'B' and L.affiliation = 'M & T Bank Corporation' group by CR.course_run_id, CR.nps having count(L.learner_id) > 2
q2_4_2; select CR1.course_run_id, CR2.course_run_id, CR1.nps, CR2.nps, I1.affiliation, I2.affiliation, CR1.start_date, CR2.start_date from (course_run as CR1 inner join instructors as I1 on (CR1.instructor_id = I1.instructor_id)) inner join (course_run as CR2 inner join instructors as I2 on (CR2.instructor_id = I2.instructor_id)) on (CR1.nps +10 < CR2.nps and CR1.start_date < CR2.start_date and CR1.course_id = CR2.course_id and (cast(strftime("%Y",CR1.start_date) as int) +1 >= (cast(strftime("%Y",CR2.start_date) as int)))) where I1.affiliation = 'Cincinnati Financial Corp.'
